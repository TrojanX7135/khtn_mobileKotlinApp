// Generated by view binder compiler. Do not edit!
package com.example.finalexamandroidkotlin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finalexamandroidkotlin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPlantBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout containerItemPlant;

  @NonNull
  public final ImageView imageItemPlant;

  @NonNull
  public final TextView textDescriptionPlant;

  @NonNull
  public final TextView textPlantName;

  private ItemPlantBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout containerItemPlant,
      @NonNull ImageView imageItemPlant, @NonNull TextView textDescriptionPlant,
      @NonNull TextView textPlantName) {
    this.rootView = rootView;
    this.containerItemPlant = containerItemPlant;
    this.imageItemPlant = imageItemPlant;
    this.textDescriptionPlant = textDescriptionPlant;
    this.textPlantName = textPlantName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPlantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPlantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_plant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPlantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout containerItemPlant = (LinearLayout) rootView;

      id = R.id.imageItemPlant;
      ImageView imageItemPlant = ViewBindings.findChildViewById(rootView, id);
      if (imageItemPlant == null) {
        break missingId;
      }

      id = R.id.textDescriptionPlant;
      TextView textDescriptionPlant = ViewBindings.findChildViewById(rootView, id);
      if (textDescriptionPlant == null) {
        break missingId;
      }

      id = R.id.textPlantName;
      TextView textPlantName = ViewBindings.findChildViewById(rootView, id);
      if (textPlantName == null) {
        break missingId;
      }

      return new ItemPlantBinding((LinearLayout) rootView, containerItemPlant, imageItemPlant,
          textDescriptionPlant, textPlantName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
