// Generated by view binder compiler. Do not edit!
package com.example.finalexamandroidkotlin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finalexamandroidkotlin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout buttonAddingNew;

  @NonNull
  public final LinearLayout buttonArticles;

  @NonNull
  public final LinearLayout buttonSpecies;

  @NonNull
  public final LinearLayout layoutInfo;

  @NonNull
  public final LinearLayout layoutTop;

  @NonNull
  public final RecyclerView rcvPhoto;

  @NonNull
  public final RecyclerView rcvPlants;

  @NonNull
  public final TextView textHelloUserName;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout buttonAddingNew, @NonNull LinearLayout buttonArticles,
      @NonNull LinearLayout buttonSpecies, @NonNull LinearLayout layoutInfo,
      @NonNull LinearLayout layoutTop, @NonNull RecyclerView rcvPhoto,
      @NonNull RecyclerView rcvPlants, @NonNull TextView textHelloUserName) {
    this.rootView = rootView;
    this.buttonAddingNew = buttonAddingNew;
    this.buttonArticles = buttonArticles;
    this.buttonSpecies = buttonSpecies;
    this.layoutInfo = layoutInfo;
    this.layoutTop = layoutTop;
    this.rcvPhoto = rcvPhoto;
    this.rcvPlants = rcvPlants;
    this.textHelloUserName = textHelloUserName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddingNew;
      LinearLayout buttonAddingNew = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddingNew == null) {
        break missingId;
      }

      id = R.id.buttonArticles;
      LinearLayout buttonArticles = ViewBindings.findChildViewById(rootView, id);
      if (buttonArticles == null) {
        break missingId;
      }

      id = R.id.buttonSpecies;
      LinearLayout buttonSpecies = ViewBindings.findChildViewById(rootView, id);
      if (buttonSpecies == null) {
        break missingId;
      }

      id = R.id.layoutInfo;
      LinearLayout layoutInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutInfo == null) {
        break missingId;
      }

      id = R.id.layoutTop;
      LinearLayout layoutTop = ViewBindings.findChildViewById(rootView, id);
      if (layoutTop == null) {
        break missingId;
      }

      id = R.id.rcvPhoto;
      RecyclerView rcvPhoto = ViewBindings.findChildViewById(rootView, id);
      if (rcvPhoto == null) {
        break missingId;
      }

      id = R.id.rcvPlants;
      RecyclerView rcvPlants = ViewBindings.findChildViewById(rootView, id);
      if (rcvPlants == null) {
        break missingId;
      }

      id = R.id.textHelloUserName;
      TextView textHelloUserName = ViewBindings.findChildViewById(rootView, id);
      if (textHelloUserName == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, buttonAddingNew, buttonArticles,
          buttonSpecies, layoutInfo, layoutTop, rcvPhoto, rcvPlants, textHelloUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
